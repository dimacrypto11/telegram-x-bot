import os
import requests
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TWITTER_BEARER_TOKEN = os.getenv("TWITTER_BEARER_TOKEN")
TWITTER_USERNAME = os.getenv("TWITTER_USERNAME")  # –ê–∫–∫–∞—É–Ω—Ç, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º —Å–ª–µ–¥–∏–º

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

def get_twitter_data(username):
    """ –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø–æ—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –°–µ—Ç–∏ X """
    url = f"https://api.twitter.com/2/users/by/username/{username}?user.fields=id"
    headers = {"Authorization": f"Bearer {TWITTER_BEARER_TOKEN}"}
    
    user_response = requests.get(url, headers=headers).json()
    user_id = user_response.get("data", {}).get("id")
    if not user_id:
        return "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    tweets_url = f"https://api.twitter.com/2/users/{user_id}/tweets?tweet.fields=public_metrics&max_results=5"
    tweets_response = requests.get(tweets_url, headers=headers).json()
    tweets = tweets_response.get("data", [])
    
    if not tweets:
        return "–û—à–∏–±–∫–∞: –ù–µ—Ç –ø–æ—Å—Ç–æ–≤"
    
    latest_tweet = tweets[0]  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç
    metrics = latest_tweet.get("public_metrics", {})
    return (f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç: https://x.com/{username}/status/{latest_tweet['id']}\n"
            f"‚ù§ –õ–∞–π–∫–∏: {metrics.get('like_count', 0)}\n"
            f"üîÅ –†–µ—Ç–≤–∏—Ç—ã: {metrics.get('retweet_count', 0)}\n"
            f"üí¨ –¶–∏—Ç–∞—Ç—ã: {metrics.get('quote_count', 0)}")

@dp.message_handler(commands=["start", "help"])
async def send_welcome(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å—Ç—ã –≤ X (Twitter).\n"
                         "–û—Ç–ø—Ä–∞–≤—å /stats, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø–æ—Å—Ç–µ!")

@dp.message_handler(commands=["stats"])
async def send_twitter_stats(message: Message):
    response_text = get_twitter_data(TWITTER_USERNAME)
    await message.answer(response_text)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
